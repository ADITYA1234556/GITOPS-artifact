name: vprofile actions
on: workflow_dispatch
env: 
    AWS_REGION: eu-west-2
    ECR_REPOSITORY: adityaimages
    EKS_CLUSTER: gitops-eks

jobs:
    Testing:
        runs-on: ubuntu-latest
        steps:
            - name: code checkout
              uses: actions/checkout@v4  #PULL SOURCE CODE
            
            - name: maven test
              run: mvn test
            
            - name: Checkstyle
              run: mvn checkstyle:checkstyle

            - name: Setup Java 11
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin'
                java-version: '11'

            - name: Setup sonarqube
              uses: warchant/setup-sonar-scanner@v7

            - name: Sonarqube scan code
              run: sonar-scanner
                 -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
                 -Dsonar.host.url=${{ secrets.SONAR_URL }}
                 -Dsonar.login=${{ secrets.SONAR_TOKEN }}
                 -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
                 -Dsonar.sources=src/
                 -Dsonar.junit.reportsPath=target/surefire-reports/
                 -Dsonar.java.binaries=target/test-classes/com/visualpathit/account
                 -Dsonar.jacoco.reportsPath=target/jacoco.exec
                 -Dsonar-java.checkstyle.reportPaths=tartget/checkstyle-result.xml

            - name: Sonarqube quality gate check
              id: sonarqube-quality-gate-check
              uses: sonarsource/sonarqube-quality-gate-action@master
              timeout-minutes: 5
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

    BUILD_AND_PUBLISH:
        needs: Testing
        runs-on: ubuntu-latest
        steps:
        - name: code checkout
          uses: actions/checkout@v4  #PULL THE QUALITY GATE PASSED SOURCE CODE
        
        - name: upload image to ECR
          uses: appleboy/docker-ecr-action@master
          with:
           access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
           secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           registry: ${{ secrets.REGISTRY }}
           repo: ${{ env.ECR_REPOSITORY }}
           region: ${{ env.AWS_REGION }}
           daemon_off: false
           dockerfile: ./Dockerfile
           context: ./
           tags: latest,${{ github.run_number }}

    DeployTOEKS:
        needs: BUILD_AND_PUBLISH
        runs-on: ubuntu-latest
        steps:
          - name: code checkout
            uses: actions/checkout@v4  #PULL SOURCE CODE THAT HAS HELM CHARTS

          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v1
            with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}
          
          - name: Get Kubeconfig  #generate config file to access kubectl
            run: aws eks update-kubeconfig --region ${{ env.AWS_REGION}} --name ${{env.EKS_CLUSTER}}

          - name: Print config file
            run: cat ~/.kube/config

          - name: Login to ECR
            run: kubectl create secret docker-registry regcred --docker-server=${{ secrets.REGISTRY }} --docker-username=AWS --docker-password=$(aws ecr get-login-password)

          - name: Deploy Heml #APPLIES ALL THE K FILES/HELM CHARTS TO THE EKS CLUSTER
            uses: bitovi/github-actions-deploy-eks-helm@v1.2.8
            with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION}}
                cluster-name: ${{ env.EKS_CLUSTER}}
                #config-files: .github/values/dev.yaml
                chart-path: helm/vprofilecharts
                namespace: default
                values: appimage=${{ secrets.REGISTRY}}/${{ env.ECR_REPOSITORY }},apptag=${{ github.run_number }}
                name: vprofile-stack



